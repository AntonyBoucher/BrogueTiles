<html>
<head>
<meta charset="utf-8" />
<style>
body {
    color: black;
    background-color: #ccc;
}
.choice {
    color: blue;
    text-decoration: underline;
    cursor: pointer;
}
canvas {
    display: inline;
    background-color: #000;
    border: 0px;
    margin-right: 5px;
    vertical-align: top;
}
</style>
</head>
<body>
<p>Meant to be rendered with Chrome on Linux.</p>
<p>You will need these fonts installed in your system:</p>
<ul>
    <li>Noto Sans</li>
    <li>Monaco</li>
    <li>Consolas</li>
    <li>Cambria</li>
    <li>Segoe UI Symbol</li>
</ul>
<p>Choose aspect ratio:
    <span class="choice" onclick="generate(0)">Default</span>
    <span class="choice" onclick="generate(1)">16:9</span>
    <span class="choice" onclick="generate(2)">16:10</span>
    <span class="choice" onclick="generate(3)">4:3</span>
</p>
<script>
function generate(aspectratio) {
    let widths;
    let heights;

    if (aspectratio == 1) { // 16:9
        widths  = [ 7,  8,  9, 10, 11, 12, 13, 15, 16, 17, 19, 22, 25, 31, 38];
        heights = [11, 13, 14, 16, 18, 20, 22, 24, 26, 28, 31, 36, 42, 52, 63];
    } else if (aspectratio == 2) { // 16:10
        widths  = [ 7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 25];
        heights = [13, 15, 17, 18, 20, 23, 24, 26, 28, 29, 31, 35, 39, 43, 47];
    } else if (aspectratio == 3) { // 4:3
        widths  = [ 7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21];
        heights = [15, 18, 20, 22, 24, 26, 29, 31, 33, 35, 38, 40, 42, 44, 46];
    } else {
        widths  = [ 7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 24, 27];
        heights = [11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 38, 44, 49];
    }

    for (let i = 0; i < widths.length; i++) {
        var p = document.createElement("p");
        p.innerText = `Size ${i+1}:`;
        p.appendChild(build(widths[i], heights[i]));
        document.body.appendChild(p);
    }
}

function build(twidth, theight) {
    let cwidth = twidth*16;
    let cheight = theight*16;
    let canvas = document.createElement("canvas");
    canvas.width = cwidth;
    canvas.height = cheight;
    let ctx = canvas.getContext("2d", { alpha: true, antialias: true });
    ctx.lineWidth = 0;
    ctx.fillStyle = "white";
    ctx.textAlign = "center";
    ctx.textBaseline = "baseline";
    ctx.clearRect(0, 0, cwidth, cheight);

    const text = [
        "                ",
        "                ",
        " !\"#$%&'()*+,-./",
        "0123456789:;<=>?",
        "@ABCDEFGHIJKLMNO",
        "PQRSTUVWXYZ[\\]^_",
        "`abcdefghijklmno",
        "pqrstuvwxyz{|}~ ",
        "⋅⸬◇⋏⥾☥♪○↑●⚲●⧲⧳  ",
        "↑↓←→Δ∇Ωθλϟ♦⨯    ",
        " ¡¢£¤¥¦§¨©ª«¬−®¯",
        "°±²³´µ¶·¸¹º»¼½¾¿",
        "ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏ",
        "ÐÑÒÓÔÕÖ⨉ØÙÚÛÜÝÞß",
        "àáâãäåæçèéêëìíîï",
        "ðñòóôõö÷øùúûüýþÿ" ];

    for (let j = 0; j < 16; j++) {
        for (let i = 0; i < 16; i++) {
            let c = text[j][i];
            let size = theight * 0.76;
            let width = twidth;
            let x = 0.5;
            let y = 0.8;

            // choose the font
            let font = "Monaco";
            if ("ÐÝÞðýþ¼½¾@¹²³".includes(c)) {
                font = "Noto Sans";
            } else if ("⋅⸬◇⥾☥⚲⨯Δ∇".includes(c)) {
                font = "Segoe UI Symbol";
            } else if ("⧲⧳".includes(c)) {
                font = "Cambria";
            } else if (j == 8 || j == 9 || "¦−·".includes(c)) {
                font = "Consolas";
            }

            // tweaks
            if (c == '⥾') { c = "♈︎"; size *= 0.8; width *= 0.9; }
            if (c == '☥') size *= 1.3;
            if (c == 'Ω' || c == '♪') size *= 1.2;
            if (c == '◇') size *= 0.8;
            if (c == '♦') size *= 0.85;
            if (c == 'ϟ') { y -= 0.15; size *= 1.1; }
            if (c == '⧲' || c == '⧳') y -= 0.1;
            if (c == '○' || c == '●' || c == '¿') y -= 0.065;
            if (c == 'ý') { y -= 0.03; size *= 0.97; }

            ctx.font = `${size}px "${font}"`;

            // find the best sub-pixel alignment
            let best = [0, 0, 1e20];
            for (let dx = -5; dx < 5; dx++) {
                for (let dy = -5; dy < 5; dy++) {
                    ctx.fillText(c, x*twidth+dx/10, y*theight+dy/10, width);
                    let data = ctx.getImageData(0, 0, twidth, theight);
                    let sum = data.data.reduce((a, b) => a + (b < 128 ? b : (255-b)));
                    if (sum < best[2]) best = [dx, dy, sum];
                    ctx.clearRect(0, 0, twidth*2, theight*2);
                }
            }

            if (0) {
                // background color, for testing glyph alignment
                ctx.fillStyle = (i+j)%2 ? "#000" : "#444";
                ctx.fillRect(0, 0, twidth, theight);
                ctx.fillStyle = (i+j)%2 ? "#009" : "#44c";
                ctx.fillRect(0, theight*0.37, twidth, theight*0.43);
                ctx.fillStyle = "white";
            }

            ctx.fillText(c, x*twidth+best[0]/10, y*theight+best[1]/10, width);
            ctx.putImageData(ctx.getImageData(0, 0, twidth, theight), i*twidth, j*theight);
            ctx.clearRect(0, 0, twidth*2, theight*2);
        }
    }
    return canvas;
}
</script>
</body>
</html>